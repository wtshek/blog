---
import { getLangFromUrl } from '../../i18n';
import CMSArticle from '../../layouts/CMSArticle.astro';
import {
  fetchArticleById,
  fetchArticles,
  type Article,
} from '../../lib/articles';

export const prerender = true;

export async function getStaticPaths() {
  try {
    const articles = await fetchArticles();
    return articles.map((article) => ({
      params: { slug: article.id },
      props: { article },
    }));
  } catch (error) {
    console.error('Error fetching articles for static paths:', error);
    return [];
  }
}

const { slug } = Astro.params;
const { article } = Astro.props;
const lang = getLangFromUrl(Astro.url);

// If running in SSR mode and no article prop, fetch it
let currentArticle = article;
if (!currentArticle && slug) {
  try {
    currentArticle = (await fetchArticleById(slug)) as Article;
  } catch (error) {
    console.error('Error fetching article:', error);
  }
}

if (!currentArticle) {
  return Astro.redirect('/404');
}
---

<CMSArticle
  article={currentArticle}
  lang={lang}
/>
